!function(){function r(r,t){(null==t||t>r.length)&&(t=r.length);for(var e=0,a=new Array(t);e<t;e++)a[e]=r[e];return a}function t(r,t,e){return t in r?Object.defineProperty(r,t,{value:e,enumerable:!0,configurable:!0,writable:!0}):r[t]=e,r}!function(){"use strict";$(".card-actions a.delete-form").on({click:function(r){var e,a=r.target.dataset,o=a.id,n=a.message;confirm(n)&&$.ajax({type:"post",url:Craft.getCpUrl("freeform/forms/delete"),data:(e={},t(e,Craft.csrfTokenName,Craft.csrfTokenValue),t(e,"id",o),e),success:function(t){var e=t.error,a=void 0===e?null:e;a?Craft.cp.displayError(a):$(r.target).parents("li[data-id]").remove()},error:function(r){Craft.cp.displayError(r)}})}}),$(".card-actions a.duplicate-form").on({click:function(r){var e,a=r.target.dataset,o=a.id,n=a.message;confirm(n)&&$.ajax({type:"post",url:Craft.getCpUrl("freeform/forms/duplicate"),data:(e={},t(e,Craft.csrfTokenName,Craft.csrfTokenValue),t(e,"id",o),e),success:function(r){var t=r.errors,e=void 0===t?[]:t;e.length?e.forEach((function(r){return Craft.cp.displayError(r)})):window.location.reload()},error:function(r){Craft.cp.displayError(r.message)}})}});var e=document.getElementById("form-cards");e&&new Sortable.default(e,{draggable:"li[data-id]",handle:".drag-handle"}).on("sortable:stop",(function(){setTimeout((function(){var e,a,o=(a=document.querySelectorAll("#form-cards > li"),function(t){if(Array.isArray(t))return r(t)}(a)||function(r){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(r))return Array.from(r)}(a)||function(t,e){if(t){if("string"==typeof t)return r(t,e);var a=Object.prototype.toString.call(t).slice(8,-1);return"Object"===a&&t.constructor&&(a=t.constructor.name),"Map"===a||"Set"===a?Array.from(t):"Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a)?r(t,e):void 0}}(a)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()).map((function(r){return r.dataset.id}));$.ajax({type:"post",url:Craft.getCpUrl("freeform/forms/sort"),data:(e={},t(e,Craft.csrfTokenName,Craft.csrfTokenValue),t(e,"order",o),e)})}),100)})),$("a.reset-spam").on({click:function(){var r,e=$(this).data(),a=e.id,o=e.message,n=$(this);return!!confirm(o)&&($.ajax({url:Craft.getCpUrl("freeform/forms/reset-spam-counter"),type:"post",dataType:"json",data:(r={},t(r,Craft.csrfTokenName,Craft.csrfTokenValue),t(r,"formId",a),r),success:function(r){r.success?n.siblings(".counter").html("0"):console.error(r)}}),!1)}}),$(".exporter").on({change:function(){$(this).val()&&$(this).parents("form").submit(),$(this).val("")}})}()}();